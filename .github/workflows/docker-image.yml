name: Publish Docker image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout du code
      - name: Check out the repo
        uses: actions/checkout@v3

      # Se connecter à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Se connecter à GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Construire l'image Docker
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/c-ll-c/ue19-lab-05:latest .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ue19-lab-05:latest .

      # Installer Trivy pour scanner l'image Docker
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      # Scan de l'image Docker pour détecter les vulnérabilités avec Trivy
      - name: Scan Docker image for vulnerabilities with Trivy
        run: |
          trivy ghcr.io/c-ll-c/ue19-lab-05:latest

      # Vérifier les résultats de Trivy (optionnel)
      - name: Check Trivy results
        run: |
          echo "Trivy scan completed. Check the logs above for vulnerabilities."

      # Publier l'image sur Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ue19-lab-05:latest

      # Publier l'image sur GitHub Packages (GHCR)
      - name: Push Docker image to GitHub Packages
        run: |
          docker push ghcr.io/c-ll-c/ue19-lab-05:latest
